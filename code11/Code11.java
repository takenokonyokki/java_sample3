//詳細未定のメソッド（抽象メソッド）を宣言方法は以下の形
//public abstract 戻り値の型 メソッド名（引数リスト）;



//抽象メソッドを含むクラスの宣言方法は以下の形
//public abstract class クラス名 {}



//抽象クラスは、newによるインスタンス化が禁止される


//未定だったメソッドの内容を確定させることを、実装（implements）すると表現する。


//インタフェース（interface）
//①すべてのメソッドは抽象メソッドである
//②基本的にフィールドを1つも持たない
//インタフェースの宣言方法は以下の形
//public interface インタフェース名 {}


//インタフェースに宣言されたメソッドは自動的にpublic abstractになる、ルールがあるので
//void run();
//といった形になる


//インタフェースを継承して子クラスを定義する場合は、extendsではなく、implementsを使う
//宣言方法は以下の形
//public class クラス名 implements インタフェース名 {}


//インタフェースによる多重継承は認められる（複数可）
//宣言方法は以下の形
//public class クラス名 implements 親インタフェース名1,親インタフェース名2,・・・ {}



//implementsとextendsの使い分け
//同種（クラス同士、インタフェース同士）の継承は、extendsを使う
//異種（インタフェースを継承してクラスを定義する）の場合は、implementsを使う
//なので、両方を使う場合もある
//public class クラス名 extends 親クラス implements 親インタフェース名1,親インタフェース名2,・・・{}